{"ast":null,"code":"var _jsxFileName = \"/Users/alvinleung/Google Drive/Projects/alvinleung-portfolio/design-explorer/src/components/designExplorer/viewport/Viewport.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Viewport.scss\"; // purpose of this component\n// Referenced tutorial\n// https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\n\nfunction Viewport(props) {\n  // mode toggles for the components\n  const [dragging, setDragging] = useState(false);\n  const [zooming, setZooming] = useState(false); // handling the position state\n\n  const zoomSpeedMultiplier = 0.001;\n  const [viewportZoom, setViewportZoom] = useState(1);\n  const [viewportOffsetPos, setViewportOffsetPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  }); // grab the html reference of the container to get the beginning position\n\n  const viewportContainerRef = useRef(null);\n\n  function mouseDownHandler(e) {\n    // enter the moving state\n    e.stopPropagation();\n    e.preventDefault(); // enter dragging mode\n\n    setDragging(true); // initialise drag offset value\n\n    const viewportElmPagePos = {\n      x: viewportContainerRef.current.getBoundingClientRect().left,\n      y: viewportContainerRef.current.getBoundingClientRect().top\n    };\n    setDragOffset({\n      x: e.nativeEvent.pageX - viewportElmPagePos.x - viewportOffsetPos.x,\n      y: e.nativeEvent.pageY - viewportElmPagePos.y - viewportOffsetPos.y\n    });\n  }\n\n  function mouseUpHandler(e) {\n    // exit dragging mode\n    setDragging(false);\n  }\n\n  function mouseWheelHandler(e) {\n    // stop the document from scrolling when the user mouse over this\n    e.nativeEvent.preventDefault();\n\n    if (!zooming) {\n      // pan around the viewport using scroll wheel when the zooming mode is not active\n      setViewportOffsetPos({\n        x: viewportOffsetPos.x - e.nativeEvent.deltaX,\n        y: viewportOffsetPos.y - e.nativeEvent.deltaY\n      });\n    } else {\n      // zoom using mousewheel data whne user is zooming in\n      setViewportZoom(viewportZoom + zoomSpeedMultiplier * e.nativeEvent.deltaX);\n    }\n  }\n\n  function mouseMoveHandler(e) {\n    if (dragging) {\n      // more about clientX/pageX/screenX\n      // https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y/9335517\n      setViewportOffsetPos({\n        // for some reason react glitches when we use offsetX\n        x: e.nativeEvent.pageX - dragOffset.x,\n        y: e.nativeEvent.pageY - dragOffset.y\n      });\n    }\n  }\n\n  useEffect(() => {\n    function handleKeyDown(e) {\n      // when shift key is down\n      if (e.which == 16) setZooming(true);\n    }\n\n    function handleKeyUp(e) {\n      // when shift key is up\n      if (e.shiftKey) setZooming(false);\n    }\n\n    document.body.addEventListener(\"keydown\", handleKeyDown);\n    document.body.addEventListener(\"keyUp\", handleKeyUp);\n    return () => {\n      document.body.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.removeEventListener(\"keyUp\", handleKeyUp);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewport-container\",\n    onMouseDown: mouseDownHandler,\n    onMouseUp: mouseUpHandler,\n    onMouseMove: mouseMoveHandler,\n    onWheel: mouseWheelHandler,\n    ref: viewportContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewport-content\",\n    style: {\n      transform: `translate(${viewportOffsetPos.x}px, ${viewportOffsetPos.y}px) scale(${viewportZoom})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, props.src.map((imgUrl, index) => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: index,\n      src: imgUrl,\n      alt: \"Design Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 18\n      }\n    });\n  })));\n}\n\nexport default Viewport;","map":{"version":3,"sources":["/Users/alvinleung/Google Drive/Projects/alvinleung-portfolio/design-explorer/src/components/designExplorer/viewport/Viewport.js"],"names":["React","useState","useRef","useEffect","Viewport","props","dragging","setDragging","zooming","setZooming","zoomSpeedMultiplier","viewportZoom","setViewportZoom","viewportOffsetPos","setViewportOffsetPos","x","y","dragOffset","setDragOffset","viewportContainerRef","mouseDownHandler","e","stopPropagation","preventDefault","viewportElmPagePos","current","getBoundingClientRect","left","top","nativeEvent","pageX","pageY","mouseUpHandler","mouseWheelHandler","deltaX","deltaY","mouseMoveHandler","handleKeyDown","which","handleKeyUp","shiftKey","document","body","addEventListener","removeEventListener","transform","src","map","imgUrl","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,iBAAP,C,CAEA;AAEA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAHuB,CAIvB;;AACA,QAAMS,mBAAmB,GAAG,KAA5B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC;AAAEc,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAA1D;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC;AAAEc,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAA5C,CARuB,CAUvB;;AACA,QAAMG,oBAAoB,GAAGjB,MAAM,CAAC,IAAD,CAAnC;;AAEA,WAASkB,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B;AACAA,IAAAA,CAAC,CAACC,eAAF;AACAD,IAAAA,CAAC,CAACE,cAAF,GAH2B,CAK3B;;AACAhB,IAAAA,WAAW,CAAC,IAAD,CAAX,CAN2B,CAQ3B;;AACA,UAAMiB,kBAAkB,GAAG;AACzBT,MAAAA,CAAC,EAAEI,oBAAoB,CAACM,OAArB,CAA6BC,qBAA7B,GAAqDC,IAD/B;AAEzBX,MAAAA,CAAC,EAAEG,oBAAoB,CAACM,OAArB,CAA6BC,qBAA7B,GAAqDE;AAF/B,KAA3B;AAKAV,IAAAA,aAAa,CAAC;AACZH,MAAAA,CAAC,EAAEM,CAAC,CAACQ,WAAF,CAAcC,KAAd,GAAsBN,kBAAkB,CAACT,CAAzC,GAA6CF,iBAAiB,CAACE,CADtD;AAEZC,MAAAA,CAAC,EAAEK,CAAC,CAACQ,WAAF,CAAcE,KAAd,GAAsBP,kBAAkB,CAACR,CAAzC,GAA6CH,iBAAiB,CAACG;AAFtD,KAAD,CAAb;AAID;;AAED,WAASgB,cAAT,CAAwBX,CAAxB,EAA2B;AACzB;AACAd,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAAS0B,iBAAT,CAA2BZ,CAA3B,EAA8B;AAC5B;AACAA,IAAAA,CAAC,CAACQ,WAAF,CAAcN,cAAd;;AAEA,QAAI,CAACf,OAAL,EAAc;AACZ;AACAM,MAAAA,oBAAoB,CAAC;AACnBC,QAAAA,CAAC,EAAEF,iBAAiB,CAACE,CAAlB,GAAsBM,CAAC,CAACQ,WAAF,CAAcK,MADpB;AAEnBlB,QAAAA,CAAC,EAAEH,iBAAiB,CAACG,CAAlB,GAAsBK,CAAC,CAACQ,WAAF,CAAcM;AAFpB,OAAD,CAApB;AAID,KAND,MAMO;AACL;AACAvB,MAAAA,eAAe,CACbD,YAAY,GAAGD,mBAAmB,GAAGW,CAAC,CAACQ,WAAF,CAAcK,MADtC,CAAf;AAGD;AACF;;AAED,WAASE,gBAAT,CAA0Bf,CAA1B,EAA6B;AAC3B,QAAIf,QAAJ,EAAc;AACZ;AACA;AAEAQ,MAAAA,oBAAoB,CAAC;AACnB;AACAC,QAAAA,CAAC,EAAEM,CAAC,CAACQ,WAAF,CAAcC,KAAd,GAAsBb,UAAU,CAACF,CAFjB;AAGnBC,QAAAA,CAAC,EAAEK,CAAC,CAACQ,WAAF,CAAcE,KAAd,GAAsBd,UAAU,CAACD;AAHjB,OAAD,CAApB;AAKD;AACF;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACd,aAASkC,aAAT,CAAuBhB,CAAvB,EAA0B;AACxB;AACA,UAAIA,CAAC,CAACiB,KAAF,IAAW,EAAf,EAAmB7B,UAAU,CAAC,IAAD,CAAV;AACpB;;AACD,aAAS8B,WAAT,CAAqBlB,CAArB,EAAwB;AACtB;AACA,UAAIA,CAAC,CAACmB,QAAN,EAAgB/B,UAAU,CAAC,KAAD,CAAV;AACjB;;AAEDgC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,SAA/B,EAA0CN,aAA1C;AACAI,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCJ,WAAxC;AAEA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,SAAlC,EAA6CP,aAA7C;AACAI,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CL,WAA3C;AACD,KAHD;AAID,GAjBQ,CAAT;AAmBA,sBACE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,WAAW,EAAEnB,gBAFf;AAGE,IAAA,SAAS,EAAEY,cAHb;AAIE,IAAA,WAAW,EAAEI,gBAJf;AAKE,IAAA,OAAO,EAAEH,iBALX;AAME,IAAA,GAAG,EAAEd,oBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AACL0B,MAAAA,SAAS,EAAG,aAAYhC,iBAAiB,CAACE,CAAE,OAAMF,iBAAiB,CAACG,CAAE,aAAYL,YAAa;AAD1F,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,KAAK,CAACyC,GAAN,CAAUC,GAAV,CAAc,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChC,wBAAO;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,GAAG,EAAED,MAAtB;AAA8B,MAAA,GAAG,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CANH,CARF,CADF;AAqBD;;AAED,eAAe5C,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./Viewport.scss\";\n\n// purpose of this component\n\n// Referenced tutorial\n// https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\n\nfunction Viewport(props) {\n  // mode toggles for the components\n  const [dragging, setDragging] = useState(false);\n  const [zooming, setZooming] = useState(false);\n  // handling the position state\n  const zoomSpeedMultiplier = 0.001;\n  const [viewportZoom, setViewportZoom] = useState(1);\n  const [viewportOffsetPos, setViewportOffsetPos] = useState({ x: 0, y: 0 });\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n\n  // grab the html reference of the container to get the beginning position\n  const viewportContainerRef = useRef(null);\n\n  function mouseDownHandler(e) {\n    // enter the moving state\n    e.stopPropagation();\n    e.preventDefault();\n\n    // enter dragging mode\n    setDragging(true);\n\n    // initialise drag offset value\n    const viewportElmPagePos = {\n      x: viewportContainerRef.current.getBoundingClientRect().left,\n      y: viewportContainerRef.current.getBoundingClientRect().top,\n    };\n\n    setDragOffset({\n      x: e.nativeEvent.pageX - viewportElmPagePos.x - viewportOffsetPos.x,\n      y: e.nativeEvent.pageY - viewportElmPagePos.y - viewportOffsetPos.y,\n    });\n  }\n\n  function mouseUpHandler(e) {\n    // exit dragging mode\n    setDragging(false);\n  }\n\n  function mouseWheelHandler(e) {\n    // stop the document from scrolling when the user mouse over this\n    e.nativeEvent.preventDefault();\n\n    if (!zooming) {\n      // pan around the viewport using scroll wheel when the zooming mode is not active\n      setViewportOffsetPos({\n        x: viewportOffsetPos.x - e.nativeEvent.deltaX,\n        y: viewportOffsetPos.y - e.nativeEvent.deltaY,\n      });\n    } else {\n      // zoom using mousewheel data whne user is zooming in\n      setViewportZoom(\n        viewportZoom + zoomSpeedMultiplier * e.nativeEvent.deltaX\n      );\n    }\n  }\n\n  function mouseMoveHandler(e) {\n    if (dragging) {\n      // more about clientX/pageX/screenX\n      // https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y/9335517\n\n      setViewportOffsetPos({\n        // for some reason react glitches when we use offsetX\n        x: e.nativeEvent.pageX - dragOffset.x,\n        y: e.nativeEvent.pageY - dragOffset.y,\n      });\n    }\n  }\n\n  useEffect(() => {\n    function handleKeyDown(e) {\n      // when shift key is down\n      if (e.which == 16) setZooming(true);\n    }\n    function handleKeyUp(e) {\n      // when shift key is up\n      if (e.shiftKey) setZooming(false);\n    }\n\n    document.body.addEventListener(\"keydown\", handleKeyDown);\n    document.body.addEventListener(\"keyUp\", handleKeyUp);\n\n    return () => {\n      document.body.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.removeEventListener(\"keyUp\", handleKeyUp);\n    };\n  });\n\n  return (\n    <div\n      className=\"viewport-container\"\n      onMouseDown={mouseDownHandler}\n      onMouseUp={mouseUpHandler}\n      onMouseMove={mouseMoveHandler}\n      onWheel={mouseWheelHandler}\n      ref={viewportContainerRef}\n    >\n      <div\n        className=\"viewport-content\"\n        style={{\n          transform: `translate(${viewportOffsetPos.x}px, ${viewportOffsetPos.y}px) scale(${viewportZoom})`,\n        }}\n      >\n        {props.src.map((imgUrl, index) => {\n          return <img key={index} src={imgUrl} alt=\"Design Section\" />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Viewport;\n"]},"metadata":{},"sourceType":"module"}