{"ast":null,"code":"var _jsxFileName = \"/Users/alvinleung/Google Drive/Projects/alvinleung-portfolio/design-explorer/src/components/designExplorer/designExplorer.js\";\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Viewport from \"./viewport\"; // utility function for min-maxing\n\nfunction clamp(value, min, max) {\n  if (value < min) return min;\n  if (value > max) return max;\n  return value;\n}\n\nfunction DesignExplorer() {\n  const imgList = [`${process.env.PUBLIC_URL}/img/8 Viewing your tasks.svg`, `${process.env.PUBLIC_URL}/img/9 Contacting a client.svg`, `${process.env.PUBLIC_URL}/img/10 Contacting a helper.svg`]; // static parameters\n\n  const ZOOM_SPEED_FACTOR = 0.02;\n  const MAX_ZOOM = 1.5;\n  const MIN_ZOOM = 0.5;\n  const VIEWPORT_WIDTH = 1920;\n  const VIEWPORT_HEIGHT = 1080; // for controlling the viewports\n\n  const [dragging, setDragging] = useState(false);\n  const [viewportZoom, setViewportZoom] = useState(1);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  }); // refs\n\n  const viewportContainerRef = useRef(null);\n\n  function mouseDownHandler(e) {\n    // enter the moving state\n    e.stopPropagation();\n    e.preventDefault(); // initialize the dragging parameter\n\n    const viewportElmPagePos = {\n      x: viewportContainerRef.current.getBoundingClientRect().left,\n      y: viewportContainerRef.current.getBoundingClientRect().top\n    };\n    setDragOffset({\n      x: e.nativeEvent.pageX - viewportElmPagePos.x - viewportCameraPos.x,\n      y: e.nativeEvent.pageY - viewportElmPagePos.y - viewportCameraPos.y\n    }); // enter dragging mode\n\n    setDragging(true);\n  }\n\n  function mouseUpHandler(e) {\n    // exit dragging mode\n    setDragging(false);\n  }\n\n  function mouseWheelHandler(e) {\n    // stop the document from scrolling when the user mouse over this\n    e.nativeEvent.preventDefault(); // pan around the viewport using scroll wheel when the zooming mode is not active\n    // setViewportOffsetPos({\n    //   x: viewportOffsetPos.x - e.nativeEvent.deltaX,\n    //   y: viewportOffsetPos.y - e.nativeEvent.deltaY,\n    // });\n    // calculate zoom value\n\n    const newZoomValue = viewportZoom - e.nativeEvent.deltaY * ZOOM_SPEED_FACTOR; // set the zoom level\n\n    setViewportZoom(clamp(newZoomValue, MIN_ZOOM, MAX_ZOOM));\n  }\n\n  function mouseMoveHandler(e) {\n    if (dragging) {\n      // grab the mouse position relative to the canvas top left\n      setViewportCameraPos({\n        x: e.nativeEvent.pageX - dragOffset.x,\n        y: e.nativeEvent.pageY - dragOffset.y\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: viewportContainerRef,\n    onMouseDown: mouseDownHandler,\n    onMouseUp: mouseUpHandler,\n    onMouseMove: mouseMoveHandler,\n    onWheel: mouseWheelHandler,\n    className: \"viewport-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Viewport, {\n    mouseX: mousePosition.x,\n    mouseY: mousePosition.y,\n    zoom: viewportZoom,\n    width: VIEWPORT_WIDTH,\n    height: VIEWPORT_HEIGHT,\n    src: imgList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default DesignExplorer;","map":{"version":3,"sources":["/Users/alvinleung/Google Drive/Projects/alvinleung-portfolio/design-explorer/src/components/designExplorer/designExplorer.js"],"names":["React","useState","useRef","PropTypes","Viewport","clamp","value","min","max","DesignExplorer","imgList","process","env","PUBLIC_URL","ZOOM_SPEED_FACTOR","MAX_ZOOM","MIN_ZOOM","VIEWPORT_WIDTH","VIEWPORT_HEIGHT","dragging","setDragging","viewportZoom","setViewportZoom","mousePosition","setMousePosition","x","y","dragOffset","setDragOffset","viewportContainerRef","mouseDownHandler","e","stopPropagation","preventDefault","viewportElmPagePos","current","getBoundingClientRect","left","top","nativeEvent","pageX","viewportCameraPos","pageY","mouseUpHandler","mouseWheelHandler","newZoomValue","deltaY","mouseMoveHandler","setViewportCameraPos"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Viewport from \"./viewport\";\n\n// utility function for min-maxing\nfunction clamp(value, min, max) {\n  if (value < min) return min;\n  if (value > max) return max;\n  return value;\n}\n\nfunction DesignExplorer() {\n  const imgList = [\n    `${process.env.PUBLIC_URL}/img/8 Viewing your tasks.svg`,\n    `${process.env.PUBLIC_URL}/img/9 Contacting a client.svg`,\n    `${process.env.PUBLIC_URL}/img/10 Contacting a helper.svg`,\n  ];\n\n  // static parameters\n  const ZOOM_SPEED_FACTOR = 0.02;\n  const MAX_ZOOM = 1.5;\n  const MIN_ZOOM = 0.5;\n  const VIEWPORT_WIDTH = 1920;\n  const VIEWPORT_HEIGHT = 1080;\n\n  // for controlling the viewports\n  const [dragging, setDragging] = useState(false);\n  const [viewportZoom, setViewportZoom] = useState(1);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n\n  // refs\n  const viewportContainerRef = useRef(null);\n\n  function mouseDownHandler(e) {\n    // enter the moving state\n    e.stopPropagation();\n    e.preventDefault();\n\n    // initialize the dragging parameter\n    const viewportElmPagePos = {\n      x: viewportContainerRef.current.getBoundingClientRect().left,\n      y: viewportContainerRef.current.getBoundingClientRect().top,\n    };\n\n    setDragOffset({\n      x: e.nativeEvent.pageX - viewportElmPagePos.x - viewportCameraPos.x,\n      y: e.nativeEvent.pageY - viewportElmPagePos.y - viewportCameraPos.y,\n    });\n\n    // enter dragging mode\n    setDragging(true);\n  }\n\n  function mouseUpHandler(e) {\n    // exit dragging mode\n    setDragging(false);\n  }\n\n  function mouseWheelHandler(e) {\n    // stop the document from scrolling when the user mouse over this\n    e.nativeEvent.preventDefault();\n\n    // pan around the viewport using scroll wheel when the zooming mode is not active\n    // setViewportOffsetPos({\n    //   x: viewportOffsetPos.x - e.nativeEvent.deltaX,\n    //   y: viewportOffsetPos.y - e.nativeEvent.deltaY,\n    // });\n\n    // calculate zoom value\n    const newZoomValue =\n      viewportZoom - e.nativeEvent.deltaY * ZOOM_SPEED_FACTOR;\n    // set the zoom level\n    setViewportZoom(clamp(newZoomValue, MIN_ZOOM, MAX_ZOOM));\n  }\n\n  function mouseMoveHandler(e) {\n    if (dragging) {\n      // grab the mouse position relative to the canvas top left\n      setViewportCameraPos({\n        x: e.nativeEvent.pageX - dragOffset.x,\n        y: e.nativeEvent.pageY - dragOffset.y,\n      });\n    }\n  }\n\n  return (\n    <div\n      ref={viewportContainerRef}\n      onMouseDown={mouseDownHandler}\n      onMouseUp={mouseUpHandler}\n      onMouseMove={mouseMoveHandler}\n      onWheel={mouseWheelHandler}\n      className=\"viewport-container\"\n    >\n      <Viewport\n        mouseX={mousePosition.x}\n        mouseY={mousePosition.y}\n        zoom={viewportZoom}\n        width={VIEWPORT_WIDTH}\n        height={VIEWPORT_HEIGHT}\n        src={imgList}\n      />\n    </div>\n  );\n}\n\nexport default DesignExplorer;\n"]},"metadata":{},"sourceType":"module"}