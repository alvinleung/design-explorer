{"ast":null,"code":"var _jsxFileName = \"/Users/alvinleung/Google Drive/Projects/alvinleung-portfolio/design-explorer/src/components/designExplorer/viewport/Viewport.js\";\nimport React, { useState, useRef } from \"react\";\nimport \"./Viewport.scss\"; // purpose of this component\n// Referenced tutorial\n// https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\n\nfunction Viewport(props) {\n  const [dragging, setDragging] = useState(false);\n  const [viewportOffsetPos, setViewportOffsetPos] = useRef({\n    x: 0,\n    y: 0\n  });\n\n  function mouseDownHandler(e) {\n    // enter the moving state\n    e.stopPropagation();\n    e.preventDefault(); // enter dragging mode\n\n    setDragging(true);\n  }\n\n  function mouseUpHandler(e) {\n    // exit dragging mode\n    setDragging(false);\n  }\n\n  function mouseMoveHandler(e) {\n    if (dragging) {\n      setViewportOffsetPos({\n        x: e.offsetX,\n        y: e.offsetY\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewport-container\",\n    onMouseDown: mouseDownHandler,\n    onMouseUp: mouseUpHandler,\n    onMouseMove: mouseMoveHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.src.map(imgUrl => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      id: imgUrl,\n      src: imgUrl,\n      alt: \"Design Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nexport default Viewport;","map":{"version":3,"sources":["/Users/alvinleung/Google Drive/Projects/alvinleung-portfolio/design-explorer/src/components/designExplorer/viewport/Viewport.js"],"names":["React","useState","useRef","Viewport","props","dragging","setDragging","viewportOffsetPos","setViewportOffsetPos","x","y","mouseDownHandler","e","stopPropagation","preventDefault","mouseUpHandler","mouseMoveHandler","offsetX","offsetY","src","map","imgUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,iBAAP,C,CAEA;AAEA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CN,MAAM,CAAC;AAAEO,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAAxD;;AACA,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B;AACAA,IAAAA,CAAC,CAACC,eAAF;AACAD,IAAAA,CAAC,CAACE,cAAF,GAH2B,CAK3B;;AACAR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASS,cAAT,CAAwBH,CAAxB,EAA2B;AACzB;AACAN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAASU,gBAAT,CAA0BJ,CAA1B,EAA6B;AAC3B,QAAIP,QAAJ,EAAc;AACZG,MAAAA,oBAAoB,CAAC;AACnBC,QAAAA,CAAC,EAAEG,CAAC,CAACK,OADc;AAEnBP,QAAAA,CAAC,EAAEE,CAAC,CAACM;AAFc,OAAD,CAApB;AAID;AACF;;AAED,sBACE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,WAAW,EAAEP,gBAFf;AAGE,IAAA,SAAS,EAAEI,cAHb;AAIE,IAAA,WAAW,EAAEC,gBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGZ,KAAK,CAACe,GAAN,CAAUC,GAAV,CAAeC,MAAD,IAAY;AACzB,wBAAO;AAAK,MAAA,EAAE,EAAEA,MAAT;AAAiB,MAAA,GAAG,EAAEA,MAAtB;AAA8B,MAAA,GAAG,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CANH,CADF;AAYD;;AAED,eAAelB,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Viewport.scss\";\n\n// purpose of this component\n\n// Referenced tutorial\n// https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\n\nfunction Viewport(props) {\n  const [dragging, setDragging] = useState(false);\n  const [viewportOffsetPos, setViewportOffsetPos] = useRef({ x: 0, y: 0 });\n  function mouseDownHandler(e) {\n    // enter the moving state\n    e.stopPropagation();\n    e.preventDefault();\n\n    // enter dragging mode\n    setDragging(true);\n  }\n\n  function mouseUpHandler(e) {\n    // exit dragging mode\n    setDragging(false);\n  }\n\n  function mouseMoveHandler(e) {\n    if (dragging) {\n      setViewportOffsetPos({\n        x: e.offsetX,\n        y: e.offsetY,\n      });\n    }\n  }\n\n  return (\n    <div\n      className=\"viewport-container\"\n      onMouseDown={mouseDownHandler}\n      onMouseUp={mouseUpHandler}\n      onMouseMove={mouseMoveHandler}\n    >\n      {props.src.map((imgUrl) => {\n        return <img id={imgUrl} src={imgUrl} alt=\"Design Section\" />;\n      })}\n    </div>\n  );\n}\n\nexport default Viewport;\n"]},"metadata":{},"sourceType":"module"}